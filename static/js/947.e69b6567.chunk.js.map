{"version":3,"file":"static/js/947.e69b6567.chunk.js","mappings":"sPAKe,SAASA,IAAgB,IAAD,IAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC7C,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYV,GAASW,MAAK,SAAAC,GAAQ,OAAIJ,EAASI,EAAb,GACnC,GAAE,CAACZ,KAGF,iBAAKa,UAAWC,EAAAA,EAAAA,sBAAhB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,0BAAhB,WACE,mBAAQD,UAAWC,EAAAA,EAAAA,sBAAnB,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,EAAAA,oBAA4BC,GAAIb,EAAjD,wBAIF,eAAIW,UAAWC,EAAAA,EAAAA,sBAAf,SAA8CP,EAAMS,kBACpD,eAAGH,UAAWC,EAAAA,EAAAA,kBAAd,yBACeP,EAAMU,iBAErB,sCACA,uBAAIV,EAAMW,YACV,oCAEA,eAAIL,UAAWC,EAAAA,EAAAA,uBAAf,SACGP,EAAMY,QACLZ,EAAMY,OAAOC,KAAI,SAAAC,GAAO,OACtB,eAAIR,UAAWC,EAAAA,EAAAA,iBAAf,UACE,cAAGD,UAAWC,EAAAA,EAAAA,2BAAd,SACGO,EAAQC,QAHS,OAQ5B,gBAAIT,UAAWC,EAAAA,EAAAA,0BAAf,WACE,eAAID,UAAWC,EAAAA,EAAAA,8BAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,EAAAA,iBAAyBC,GAAG,OAA7C,qBAIF,eAAIF,UAAWC,EAAAA,EAAAA,8BAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,EAAAA,iBAAyBC,GAAG,UAA7C,2BAKJ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,UAGJ,gBAAKX,UAAWC,EAAAA,EAAAA,yBAAhB,UACE,gBACED,UAAWC,EAAAA,EAAAA,mBACXW,IAAG,0CAAqClB,EAAMmB,aAC9CC,IAAG,+CAAYpB,EAAMS,sBAK9B,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchIdData } from '../../Api';\nimport { Link } from 'react-router-dom';\nimport styles from './MovieDetails.module.css';\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const [value, setValue] = useState({});\n  useEffect(() => {\n    fetchIdData(movieId).then(response => setValue(response));\n  }, [movieId]);\n\n  return (\n    <div className={styles.MovieDetailsContainer}>\n      <div className={styles.MovieDetailsTextContainer}>\n        <button className={styles.MovieDetailsGoBackBtn}>\n          <Link className={styles.MovieDetailsBtnLink} to={backLinkHref}>\n            Go back\n          </Link>\n        </button>\n        <h2 className={styles.MovieDetailsFilmTitle}>{value.original_title}</h2>\n        <p className={styles.MovieDetailsGrade}>\n          User Score: {value.vote_average}\n        </p>\n        <h3>Overwiew</h3>\n        <p>{value.overview}</p>\n        <h3>Genres</h3>\n\n        <ul className={styles.MovieDetailsGenresList}>\n          {value.genres &&\n            value.genres.map(element => (\n              <li className={styles.MovieDetailsItem}>\n                <p className={styles.MovieDetailsGenresListText}>\n                  {element.name}\n                </p>\n              </li>\n            ))}\n        </ul>\n        <ul className={styles.MovieDetailsAditionalList}>\n          <li className={styles.MovieDetailsAditionalListItem}>\n            <Link className={styles.MovieDetailsCast} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li className={styles.MovieDetailsAditionalListItem}>\n            <Link className={styles.MovieDetailsCast} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n      <div className={styles.MovieDetailsImgContainer}>\n        <img\n          className={styles.MovieDetailsPoster}\n          src={`https://image.tmdb.org/t/p/w200/${value.poster_path}`}\n          alt={`Постер ${value.original_title}`}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":["MovieDetails","movieId","useParams","backLinkHref","useLocation","state","from","useState","value","setValue","useEffect","fetchIdData","then","response","className","styles","to","original_title","vote_average","overview","genres","map","element","name","Suspense","fallback","src","poster_path","alt"],"sourceRoot":""}