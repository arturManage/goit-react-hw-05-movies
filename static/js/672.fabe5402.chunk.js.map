{"version":3,"file":"static/js/672.fabe5402.chunk.js","mappings":"oOACA,EAA4B,yBAA5B,EAAiE,yBAAjE,EAAiG,oBAAjG,EAAoK,yB,SCGrJ,SAASA,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeT,GAAYU,MAAK,SAAAC,GAAQ,OAAIN,EAASM,EAAb,GACzC,GAAE,CAACX,IAQJ,OACE,4BACE,kBAAMY,OAAO,GAAGC,SATI,SAAAC,GACtBA,EAAMC,iBACNd,EAAcC,EACf,EAMG,WACE,kBAAOc,QAAQ,GAAf,UACE,kBAAOC,KAAK,OAAOC,SAPD,SAAAJ,GACxBX,EAAkBW,EAAMK,OAAOf,MAChC,OAOK,mBAAQgB,UAAWC,EAAkBJ,KAAK,SAA1C,wBAIF,eAAIG,UAAWC,EAAf,cACaC,IAAVlB,GACCA,EAAMmB,KAAI,SAAAC,GAAO,OACf,eAAIC,GAAID,EAAQC,GAAIL,UAAWC,EAA/B,UACE,SAAC,KAAD,CACED,UAAWC,EACXK,GAAE,UAAKF,EAAQC,IACfE,MAAO,CAAEC,KAAMtB,GAHjB,SAKGkB,EAAQK,kBANoCL,EAAQC,GAD1C,QAc1B,C","sources":["webpack://react-homework-template/./src/components/Movie/Movie.module.css?e0b9","components/Movie/Movie.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieLink\":\"Movie_MovieLink__YjJtO\",\"MovieList\":\"Movie_MovieList__Md5oo\",\"item\":\"Movie_item__pbGQr\",\"homeLink\":\"Movie_homeLink__LrXOM\",\"SearchBtn\":\"Movie_SearchBtn__ePd23\"};","import { fetchInputData } from '../../Api';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport styles from './Movie.module.css';\nexport default function Movies() {\n  const [inputValue, setInputValue] = useState('');\n  const [testInputValue, setTestInputValue] = useState('');\n  const [value, setValue] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    fetchInputData(inputValue).then(response => setValue(response));\n  }, [inputValue]);\n  const searchInputForm = event => {\n    event.preventDefault();\n    setInputValue(testInputValue);\n  };\n  const inputMoviesChange = event => {\n    setTestInputValue(event.target.value);\n  };\n  return (\n    <div>\n      <form action=\"\" onSubmit={searchInputForm}>\n        <label htmlFor=\"\">\n          <input type=\"text\" onChange={inputMoviesChange} />\n        </label>\n        <button className={styles.SearchBtn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <ul className={styles.MovieList}>\n        {value !== undefined &&\n          value.map(element => (\n            <li id={element.id} className={styles.item} key={element.id}>\n              <Link\n                className={styles.MovieLink}\n                to={`${element.id}`}\n                state={{ from: location }}\n              >\n                {element.original_title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["Movies","useState","inputValue","setInputValue","testInputValue","setTestInputValue","value","setValue","location","useLocation","useEffect","fetchInputData","then","response","action","onSubmit","event","preventDefault","htmlFor","type","onChange","target","className","styles","undefined","map","element","id","to","state","from","original_title"],"sourceRoot":""}